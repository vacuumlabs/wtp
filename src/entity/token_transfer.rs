//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "token_transfer")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub output_id: i64,
    pub token_id: i64,
    pub amount: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::transaction_output::Entity",
        from = "Column::OutputId",
        to = "super::transaction_output::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    TransactionOutput,
    #[sea_orm(
        belongs_to = "super::token::Entity",
        from = "Column::TokenId",
        to = "super::token::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Token,
}

impl Related<super::transaction_output::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TransactionOutput.def()
    }
}

impl Related<super::token::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Token.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
