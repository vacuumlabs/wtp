//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]
#[sea_orm(table_name = "transaction")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(unique)]
    pub hash: Vec<u8>,
    pub block_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::block::Entity",
        from = "Column::BlockId",
        to = "super::block::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Block,
    #[sea_orm(has_many = "super::transaction_output::Entity")]
    TransactionOutput,
    #[sea_orm(has_many = "super::price_update::Entity")]
    PriceUpdate,
}

impl Related<super::block::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Block.def()
    }
}

impl Related<super::transaction_output::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TransactionOutput.def()
    }
}

impl Related<super::price_update::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PriceUpdate.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
